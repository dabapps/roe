// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Row Table should allow disabling scrolling 1`] = `
<div
  className="table-wrapper"
>
  <div
    style={
      Object {
        "paddingLeft": null,
      }
    }
  >
    <div
      className={undefined}
    >
      <table
        className="table sm-collapse"
      />
    </div>
  </div>
</div>
`;

exports[`Row Table should apply some boolean classes 1`] = `
<div
  className="table-wrapper"
>
  <div
    style={
      Object {
        "paddingLeft": null,
      }
    }
  >
    <div
      className="table-scroller"
    >
      <table
        className="table sm-collapse striped bordered hover condensed fill fixed"
      />
    </div>
  </div>
</div>
`;

exports[`Row Table should apply table styles classes 1`] = `
<div
  className="table-wrapper"
>
  <div
    style={
      Object {
        "paddingLeft": null,
      }
    }
  >
    <div
      className="table-scroller"
    >
      <table
        className="table sm-collapse striped bordered hover condensed"
      />
    </div>
  </div>
</div>
`;

exports[`Row Table should fix row headers to specified width 1`] = `
<div
  className="table-wrapper"
>
  <div
    style={
      Object {
        "paddingLeft": 100,
      }
    }
  >
    <div
      className="table-scroller"
    >
      <table
        className="table sm-collapse fix-column-headers"
      >
        <thead
          className="table-head"
        >
          <tr
            className="table-row"
          >
            <th
              className="table-header"
              style={
                Object {
                  "maxWidth": 100,
                  "width": 100,
                }
              }
            >
              Header
            </th>
          </tr>
        </thead>
        <tbody
          className="table-body"
        >
          <tr
            className="table-row"
          >
            <td
              className="table-cell"
              style={
                Object {
                  "maxWidth": 100,
                  "width": 100,
                }
              }
            >
              Cell
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>
`;

exports[`Row Table should set the collapse size 1`] = `
<div
  className="table-wrapper"
>
  <div
    style={
      Object {
        "paddingLeft": null,
      }
    }
  >
    <div
      className="table-scroller"
    >
      <table
        className="table xs-collapse"
      />
    </div>
  </div>
</div>
`;

exports[`Row Table should use a component prop as the table component 1`] = `
<div
  className="table-wrapper"
>
  <div
    style={
      Object {
        "paddingLeft": null,
      }
    }
  >
    <div
      className="table-scroller"
    >
      <p
        className="table sm-collapse"
      />
    </div>
  </div>
</div>
`;

exports[`Row TableCell should not render null, false, undefined or empty string 1`] = `
<td
  className="table-cell"
  style={
    Object {
      "maxWidth": undefined,
      "width": undefined,
    }
  }
>
   
</td>
`;

exports[`Row TableCell should not render null, false, undefined or empty string 2`] = `
<td
  className="table-cell"
  style={
    Object {
      "maxWidth": undefined,
      "width": undefined,
    }
  }
>
   
</td>
`;

exports[`Row TableCell should not render null, false, undefined or empty string 3`] = `
<td
  className="table-cell"
  style={
    Object {
      "maxWidth": undefined,
      "width": undefined,
    }
  }
>
   
</td>
`;

exports[`Row TableCell should not render null, false, undefined or empty string 4`] = `
<td
  className="table-cell"
  style={
    Object {
      "maxWidth": undefined,
      "width": undefined,
    }
  }
>
   
</td>
`;

exports[`Row TableCell should render a non breaking space if no children provided 1`] = `
<td
  className="table-cell"
  style={
    Object {
      "maxWidth": undefined,
      "width": undefined,
    }
  }
>
   
</td>
`;

exports[`Row TableCell should render the number 0 1`] = `
<td
  className="table-cell"
  style={
    Object {
      "maxWidth": undefined,
      "width": undefined,
    }
  }
>
  0
</td>
`;

exports[`Row TableHeader should not render null, false, undefined or empty string 1`] = `
<th
  className="table-header"
  style={
    Object {
      "maxWidth": undefined,
      "width": undefined,
    }
  }
>
   
</th>
`;

exports[`Row TableHeader should not render null, false, undefined or empty string 2`] = `
<th
  className="table-header"
  style={
    Object {
      "maxWidth": undefined,
      "width": undefined,
    }
  }
>
   
</th>
`;

exports[`Row TableHeader should not render null, false, undefined or empty string 3`] = `
<th
  className="table-header"
  style={
    Object {
      "maxWidth": undefined,
      "width": undefined,
    }
  }
>
   
</th>
`;

exports[`Row TableHeader should not render null, false, undefined or empty string 4`] = `
<th
  className="table-header"
  style={
    Object {
      "maxWidth": undefined,
      "width": undefined,
    }
  }
>
   
</th>
`;

exports[`Row TableHeader should render a non breaking space if no children provided 1`] = `
<th
  className="table-header"
  style={
    Object {
      "maxWidth": undefined,
      "width": undefined,
    }
  }
>
   
</th>
`;

exports[`Row TableHeader should render the number 0 1`] = `
<th
  className="table-header"
  style={
    Object {
      "maxWidth": undefined,
      "width": undefined,
    }
  }
>
  0
</th>
`;

exports[`Row should match snapshot 1`] = `
<div
  className="table-wrapper"
>
  <div
    style={
      Object {
        "paddingLeft": null,
      }
    }
  >
    <div
      className="table-scroller"
    >
      <table
        className="table sm-collapse"
      >
        <thead
          className="table-head"
        >
          <tr
            className="table-row"
          >
            <th
              className="table-header"
              style={
                Object {
                  "maxWidth": undefined,
                  "width": undefined,
                }
              }
            >
              Header
            </th>
          </tr>
        </thead>
        <tbody
          className="table-body"
        >
          <tr
            className="table-row"
          >
            <td
              className="table-cell"
              style={
                Object {
                  "maxWidth": undefined,
                  "width": undefined,
                }
              }
            >
              Cell
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>
`;
